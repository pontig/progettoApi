==6772== Memcheck, a memory error detector
==6772== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6772== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6772== Command: ./a.out
==6772== 
==6772== Invalid read of size 4
==6772==    at 0x10B82D: rev_compute_path (source.c:995)
==6772==    by 0x10C0DD: main (source.c:1186)
==6772==  Address 0x5cf1e94 is 4 bytes after a block of size 128 alloc'd
==6772==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==6772==    by 0x10B683: rev_compute_path (source.c:980)
==6772==    by 0x10C0DD: main (source.c:1186)
==6772== 
==6772== 
==6772== HEAP SUMMARY:
==6772==     in use at exit: 81,480 bytes in 1,455 blocks
==6772==   total heap usage: 4,097,549 allocs, 4,096,094 frees, 162,692,245 bytes allocated
==6772== 
==6772== 81,480 bytes in 1,455 blocks are definitely lost in loss record 1 of 1
==6772==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==6772==    by 0x1099F3: rb_insert (source.c:277)
==6772==    by 0x10BBB7: main (source.c:1084)
==6772== 
==6772== LEAK SUMMARY:
==6772==    definitely lost: 81,480 bytes in 1,455 blocks
==6772==    indirectly lost: 0 bytes in 0 blocks
==6772==      possibly lost: 0 bytes in 0 blocks
==6772==    still reachable: 0 bytes in 0 blocks
==6772==         suppressed: 0 bytes in 0 blocks
==6772== 
==6772== For lists of detected and suppressed errors, rerun with: -s
==6772== ERROR SUMMARY: 11989 errors from 2 contexts (suppressed: 0 from 0)